/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.GuiView.DoctorView;

import Controller.Medicines.MedicinesController;
import Controller.Prescriptions.PrescriptionsCommand.AddMedicine;
import Controller.Prescriptions.PrescriptionsCommand.AddNote;
import Controller.Prescriptions.PrescriptionsCommand.ICommand;
import Controller.Prescriptions.PrescriptionsCommand.SavePrescription;
import Controller.Users.UsersController;
import Model.Appointments.Appointment;
import Model.Appointments.AppointmentInvoker;
import Model.Medicines.Medicine;
import Model.Medicines.MedicineList;
import Model.Prescriptions.Prescription;
import Model.Users.Doctor;
import static View.DoctorState.AppointmentView.addMedicine;
import View.DoctorState.DoctorState;
import View.DoctorState.IState;
import View.GuiView.SecretaryView.SecretaryGiveMedicine;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author jonat
 */
public class DoctorAppointmentView extends javax.swing.JFrame implements IState {
    private Doctor doctor;
    private Appointment appointment;
    private Prescription prescription;
    private AppointmentInvoker invoker;
    /**
     * Creates new form DoctorAppointmentView
     */
    public DoctorAppointmentView() {
        initComponents();
        fillList();
    }

    DoctorAppointmentView(Doctor doctor, Appointment appointment) {
        initComponents();
        this.doctor = doctor;
        this.appointment = appointment;
        prescription = new Prescription(doctor,appointment.getAppointmentPatient());
        invoker = new AppointmentInvoker();
        fillList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHome = new javax.swing.JLabel();
        btnExitAppointment = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtNote = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        btnSaveNote = new javax.swing.JButton();
        btnUndoNote = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listMedicines = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        btnUndoMedicine = new javax.swing.JButton();
        btnSaveMedicine = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtDosage = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        btnSavePrescription = new javax.swing.JButton();
        btnUndoPrescription = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblHome.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblHome.setText("Appointment");

        btnExitAppointment.setText("End Appointment");
        btnExitAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitAppointmentActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(txtNote);

        jLabel1.setText("Make Notes");

        btnSaveNote.setText("Save Note");
        btnSaveNote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveNoteActionPerformed(evt);
            }
        });

        btnUndoNote.setText("Undo Note");
        btnUndoNote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUndoNoteActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(listMedicines);

        jLabel2.setText("Add medicine");

        btnUndoMedicine.setText("Undo Medicine");
        btnUndoMedicine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUndoMedicineActionPerformed(evt);
            }
        });

        btnSaveMedicine.setText("Save Medicine");
        btnSaveMedicine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveMedicineActionPerformed(evt);
            }
        });

        jLabel3.setText("Add dosage");

        jLabel4.setText("Add quantity");

        btnSavePrescription.setText("Save Prescription");
        btnSavePrescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSavePrescriptionActionPerformed(evt);
            }
        });

        btnUndoPrescription.setText("Undo prescription");
        btnUndoPrescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUndoPrescriptionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHome)
                    .addComponent(btnExitAppointment)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSaveNote)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUndoNote))
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(btnSaveMedicine)
                                .addGap(18, 18, 18)
                                .addComponent(btnUndoMedicine))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnSavePrescription)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnUndoPrescription))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtDosage, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(1, 1, 1)
                                .addComponent(jScrollPane2)
                                .addGap(18, 18, 18)
                                .addComponent(btnExitAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtDosage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnSaveMedicine)
                                    .addComponent(btnUndoMedicine))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnUndoPrescription)
                                    .addComponent(btnSavePrescription))
                                .addGap(15, 15, 15))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSaveNote)
                            .addComponent(btnUndoNote))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

        private void fillList(){
        DefaultListModel listModel = new DefaultListModel();
        MedicineList allMedicinesList = null;
        try {
            allMedicinesList = MedicinesController.getAllMedicines();
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(SecretaryGiveMedicine.class.getName()).log(Level.SEVERE, null, ex);
        }
        ArrayList<Medicine> allMedicines = allMedicinesList.getAllMedicines();
        if (allMedicines != null) {
            for (Medicine medicine : allMedicines) {
                listModel.addElement(medicine.getName());
            }
        }
        listMedicines.setModel(listModel);
    }
    
    private void btnExitAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitAppointmentActionPerformed
      
        int selectedOption = JOptionPane.showConfirmDialog(null, "Are you sure you would like to exit and end this appointment."
                + " Upon doing so, you will not be able to reacccess this appointment.",
                "End appointment",
                JOptionPane.YES_NO_OPTION);
        if (selectedOption == JOptionPane.YES_OPTION) {
            doctor.getAppointments().remove(appointment);
            try {
                UsersController.editUser(doctor);
            } catch (IOException | ClassNotFoundException ex) {
                Logger.getLogger(DoctorAppointmentView.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.setVisible(false);
            new DoctorView(doctor).setVisible(true); 
        }
    }//GEN-LAST:event_btnExitAppointmentActionPerformed

    private void btnSaveMedicineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveMedicineActionPerformed
        boolean success = addMedicine(true);
        if (success) {
            JOptionPane.showMessageDialog(null, "Medicine added to prescription", "Success", JOptionPane.INFORMATION_MESSAGE);    
        }
                
    }//GEN-LAST:event_btnSaveMedicineActionPerformed

    private void btnUndoMedicineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUndoMedicineActionPerformed
        boolean success = addMedicine(false);
        if (success){
            JOptionPane.showMessageDialog(null, "Medicine removed from prescription", "Success", JOptionPane.INFORMATION_MESSAGE);
            txtDosage.setText("No dosage");
            txtQuantity.setText("No quantity"); 
        }

    }//GEN-LAST:event_btnUndoMedicineActionPerformed

    private void btnSaveNoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveNoteActionPerformed
        boolean success = addNote(true);
        if (success){
            JOptionPane.showMessageDialog(null, "Note added to prescription", "Success", JOptionPane.INFORMATION_MESSAGE);
        }
        txtNote.setText(prescription.getNote());
    }//GEN-LAST:event_btnSaveNoteActionPerformed

    private void btnUndoNoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUndoNoteActionPerformed
        boolean success = addNote(false);
        if (success) {
            JOptionPane.showMessageDialog(null, "Note removed from prescription", "Success", JOptionPane.INFORMATION_MESSAGE);  
        }
        txtNote.setText(prescription.getNote());
    }//GEN-LAST:event_btnUndoNoteActionPerformed

    private void btnSavePrescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSavePrescriptionActionPerformed
        boolean success = savePrescription(true);
        if (success) {
            JOptionPane.showMessageDialog(null, "Prescription saved to file", "Success", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnSavePrescriptionActionPerformed

    private void btnUndoPrescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUndoPrescriptionActionPerformed
        boolean success = savePrescription(false);
        if (success) {
            JOptionPane.showMessageDialog(null, "Prescription removed from file", "Success", JOptionPane.INFORMATION_MESSAGE);
            txtDosage.setText("No dosage");
            txtQuantity.setText("No quantity"); 
        }
        txtNote.setText(prescription.getNote());
    }//GEN-LAST:event_btnUndoPrescriptionActionPerformed

    
    private boolean addMedicine(boolean add){
        String medicineName = listMedicines.getSelectedValue();
        MedicineList medicineList = new MedicineList();
        boolean valid = true;
        if (medicineName == null) {
            valid = false;
            JOptionPane.showMessageDialog(new JFrame(), "Please select a medicine from the list","Required input",JOptionPane.ERROR_MESSAGE);
        }
        try {
            medicineList = MedicinesController.getAllMedicines();
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(DoctorAppointmentView.class.getName()).log(Level.SEVERE, null, ex);
        }
        int amount;
        String strAmount = txtQuantity.getText();
        amount = Integer.parseInt(strAmount);
        String dosage = txtDosage.getText();
        ArrayList<Medicine> allMedicines = medicineList.getAllMedicines();
        if (valid) {
            if (allMedicines != null) {
                for (Medicine medicine : allMedicines) {
                    if (medicine.getName().equals(medicineName)) {
                        ICommand addMedicine = new AddMedicine(prescription,medicine,amount,dosage);              
                        invoker.setCommand(addMedicine);
                        if (add) {
                            invoker.executeCommand();
                        }
                        else{
                        invoker.undoCommand();
                        }
                    }
                }
            }
        }
        return valid;
    }
    
    private boolean addNote(boolean add){
        String note = txtNote.getText();
        if (note.equals("")) {
              JOptionPane.showMessageDialog(new JFrame(), "Please add a note","Required input",JOptionPane.ERROR_MESSAGE);
              return false;
        }
        else {
            ICommand addNote = new AddNote(prescription,note);   
            invoker.setCommand(addNote);
            if (add) {
                invoker.executeCommand();
            }
            else{
            invoker.undoCommand();}
            return true;
        }
    }
   
    private boolean savePrescription(boolean add){
        if (prescription.getDosage().equals("") || prescription.getQuantity() == 0 || prescription.getMedicine() == null) {
            JOptionPane.showMessageDialog(new JFrame(), "Please make sure all fields are filled out","Required input",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        else  
        {
            ICommand savePrescription = new SavePrescription(prescription);   
            invoker.setCommand(savePrescription);
            if (add) {
                invoker.executeCommand();
            }
            else{
            invoker.undoCommand();}
            return true;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DoctorAppointmentView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DoctorAppointmentView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DoctorAppointmentView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoctorAppointmentView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DoctorAppointmentView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExitAppointment;
    private javax.swing.JButton btnSaveMedicine;
    private javax.swing.JButton btnSaveNote;
    private javax.swing.JButton btnSavePrescription;
    private javax.swing.JButton btnUndoMedicine;
    private javax.swing.JButton btnUndoNote;
    private javax.swing.JButton btnUndoPrescription;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblHome;
    private javax.swing.JList<String> listMedicines;
    private javax.swing.JTextField txtDosage;
    private javax.swing.JTextPane txtNote;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables

    @Override
    public void enterAppointment(Doctor doctor, DoctorState doctorState, Appointment appointment) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void exitAppointment(Doctor doctor, DoctorState doctorState, Appointment appointment) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
