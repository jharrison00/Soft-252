/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.GuiView.PatientView;

import Controller.Users.UsersController;
import Enums.Genders;
import Model.Users.Doctor;
import Model.Users.Patient;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author jonat
 */
public class PatientDoctorFeedback extends javax.swing.JFrame {
    private Patient patient;
    private Doctor doctor;
    
    /**
     * Creates new form PatientDoctorFeedback
     */
    public PatientDoctorFeedback() {
        initComponents();
        groupButton();
    }
    
    public PatientDoctorFeedback(Patient patient,Doctor doctor) {
        initComponents();
        this.patient = patient;
        this.doctor = doctor;
        groupButton();
    }
    
        
    private ButtonGroup bg = new ButtonGroup();
       
    private void groupButton(){
        bg.add(radBtn1);
        bg.add(radBtn2);
        bg.add(radBtn3);
        bg.add(radBtn4);
        bg.add(radBtn5);
    }
    
              /**
     * Get the selected rating by the user. 
     * @return int
     */
    public int getRating(){
        for (Enumeration<AbstractButton> buttons = bg.getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();
            if (button.isSelected()) {
                String type = button.getText();
                if (null != type)switch (type) {
                    case "1":{
                        return 1;
                    }
                    case "2":{
                        return 2;
                    }
                    case "3":{
                        return 3;
                    }
                    case "4":{
                        return 4;
                    }
                    case "5":{
                        return 5;
                    }
                    default:
                        return 0;
                }
            }
        }
        return 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHome1 = new javax.swing.JLabel();
        txtFeedback = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        radBtn1 = new javax.swing.JRadioButton();
        radBtn3 = new javax.swing.JRadioButton();
        radBtn5 = new javax.swing.JRadioButton();
        radBtn4 = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        radBtn2 = new javax.swing.JRadioButton();
        btnSubmitRating = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnSubmitFeedback = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblHome1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblHome1.setText("Doctor Feedback");

        jLabel1.setText("Give Feedback:");

        radBtn1.setText("1");

        radBtn3.setText("3");

        radBtn5.setText("5");

        radBtn4.setText("4");

        jLabel2.setText("Give Rating:");

        radBtn2.setText("2");

        btnSubmitRating.setText("Submit Rating");
        btnSubmitRating.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitRatingActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnSubmitFeedback.setText("Submit Feedback");
        btnSubmitFeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitFeedbackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFeedback))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblHome1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radBtn1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radBtn2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radBtn3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radBtn4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radBtn5))
                            .addComponent(btnBack))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSubmitRating, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                        .addComponent(btnSubmitFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHome1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(radBtn1)
                    .addComponent(radBtn2)
                    .addComponent(radBtn3)
                    .addComponent(radBtn4)
                    .addComponent(radBtn5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmitRating, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSubmitFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(btnBack)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.setVisible(false);
        new PatientViewDoctors(patient).setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSubmitRatingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitRatingActionPerformed
        
        if (getRating() == 0) {
            JOptionPane.showMessageDialog(new JFrame(), "Please enter a rating","Required input",JOptionPane.ERROR_MESSAGE);
        }
        else {
            ArrayList<Integer> ratings = doctor.getRatings();
            if (ratings == null)
            {
                ratings = new ArrayList<Integer>();
            }
            ratings.add(getRating());
            doctor.setRatingAverage(ratings);
            doctor.setRatings(ratings); 
            try {
                UsersController.editUser(doctor);
            } catch (IOException | ClassNotFoundException ex) {
                Logger.getLogger(PatientDoctorFeedback.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(new JFrame(), "Rating added to doctor average","Success",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnSubmitRatingActionPerformed

    private void btnSubmitFeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitFeedbackActionPerformed
        if ("".equals(txtFeedback.getText())) {
            JOptionPane.showMessageDialog(new JFrame(), "Feedback required","Required input",JOptionPane.ERROR_MESSAGE);
        }
        else{
            ArrayList<String> feedbacks = doctor.getFeedback();
            if (feedbacks == null)
            {
                feedbacks = new ArrayList<String>();
            }
            feedbacks.add(txtFeedback.getText());
            doctor.setFeedback(feedbacks);
            try {
                UsersController.editUser(doctor);
            } catch (IOException | ClassNotFoundException ex) {
                Logger.getLogger(PatientDoctorFeedback.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(new JFrame(), "Feedback added","Success",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnSubmitFeedbackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientDoctorFeedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientDoctorFeedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientDoctorFeedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientDoctorFeedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientDoctorFeedback().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSubmitFeedback;
    private javax.swing.JButton btnSubmitRating;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblHome1;
    private javax.swing.JRadioButton radBtn1;
    private javax.swing.JRadioButton radBtn2;
    private javax.swing.JRadioButton radBtn3;
    private javax.swing.JRadioButton radBtn4;
    private javax.swing.JRadioButton radBtn5;
    private javax.swing.JTextField txtFeedback;
    // End of variables declaration//GEN-END:variables
}
